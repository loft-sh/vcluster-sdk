name: Release
on:
  release:
    types: [created]

jobs:
  setup:
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.get_version.outputs.release_version }}
      docker_labels: ${{ steps.docker_meta.outputs.labels }}
    steps:
      - id: get_version
        run: |
          RELEASE_VERSION=$(echo $GITHUB_REF | sed -nE 's!refs/tags/!!p')
          echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
      - name: Get Docker tags
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/loft-sh/rancher-nodeless-plugin
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest

  build-images:
    needs: setup
    if: startsWith(github.ref, 'refs/tags/v') == true
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        example:
          - name: hooks
            context: ./examples/hooks
            dockerfile: ./examples/hooks/Dockerfile
            tag: vcluster-example-hooks
          - name: bootstrap
            context: ./examples/bootstrap-with-deployment
            dockerfile: ./examples/bootstrap-with-deployment/Dockerfile
            tag: vcluster-example-bootstrap-bootstrap-with-deployment
          - name: crd-sync
            context: ./examples/crd-sync
            dockerfile: ./examples/crd-sync/Dockerfile
            tag: vcluster-example-crd-sync

    permissions:
      id-token: write
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - uses: sigstore/cosign-installer@main
        with:
          cosign-release: "v2.0.2"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ matrix.example.name }}
        uses: docker/build-push-action@v6
        id: docker_build
        with:
          file: ${{ matrix.example.dockerfile }}
          context: ${{ matrix.example.context }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: "ghcr.io/loft-sh/${{ matrix.example.tag }}:${{ needs.setup.outputs.version }}"
          labels: ${{ needs.setup.outputs.docker_labels }}

      - name: Output digest for ${{ matrix.example.name }}
        run: echo "Built ${{ matrix.example.name }} with digest ${{ steps.docker_build.outputs.digest }}"
